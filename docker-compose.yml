# Docker Compose configuration for Pomodoro Timer

services:
  # 生产环境服务
  pomodoro-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: pomodoro-timer
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - pomodoro-network
    labels:
      - "com.example.description=Pomodoro Timer Application"
      - "com.example.version=1.0.0"

  # 开发环境服务
  pomodoro-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: pomodoro-timer-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - pomodoro-network
    profiles:
      - dev

  # Nginx 反向代理（可选）
  nginx-proxy:
    image: nginx:alpine
    container_name: pomodoro-nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/proxy-nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - pomodoro-app
    restart: unless-stopped
    networks:
      - pomodoro-network
    profiles:
      - proxy

networks:
  pomodoro-network:
    driver: bridge
    name: pomodoro-network

volumes:
  node_modules:
    name: pomodoro-node-modules